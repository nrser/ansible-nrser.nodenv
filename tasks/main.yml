---
# tasks file for nrser.nodenv

- name: install nodenv
  git:
    repo: "{{ nodenv_github_base_url }}/nodenv"
    dest: ~/.nodenv
    update: "{{ nodenv_update }}"

- name: install node-build
  git:
    repo: "{{ nodenv_github_base_url }}/node-build.git"
    dest: ~/.nodenv/plugins/node-build
    update: false

- name: read nodenv versions
  vars.rb:
    namespace: nodenv
    vars:
      nodes: "{{ nodenv_nodes }}"
    src: |
      exe = "#{ ENV['HOME'] }/.nodenv/bin/nodenv"
      vars = {}
      vars[:installed_versions] = `#{ exe } versions --bare`.split
      vars[:available_versions] = `#{ exe } install --list`.split
      vars[:build_needs_update] = (nodes - vars[:available_versions]).length > 0
      vars
  changed_when: false

- name: update node-build
  git:
    repo: "{{ nodenv_github_base_url }}/node-build.git"
    dest: ~/.nodenv/plugins/node-build
    update: true
  when: nodenv_update or nodenv_build_needs_update

- name: install node.js versions
  command: ~/.nodenv/bin/nodenv install {{ item }}
  when: item not in nodenv_installed_versions
  with_items: "{{ nodenv_nodes }}"

# set the global
- name: get nodenv global ruby
  shell: ~/.nodenv/bin/nodenv global
  register: nodenv_current_global
  changed_when: false
  when: nodenv_global is defined

- name: set nodenv global ruby
  command: ~/.nodenv/bin/nodenv global {{ nodenv_global }}
  when: nodenv_global is defined and nodenv_current_global.stdout != nodenv_global
